// Generated by Haxe 4.3.1
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_haxe_ui_Toolkit
#include <haxe/ui/Toolkit.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentBase
#include <haxe/ui/backend/ComponentBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentImpl
#include <haxe/ui/backend/ComponentImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_EventBase
#include <haxe/ui/backend/EventBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_EventImpl
#include <haxe/ui/backend/EventImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_FocusManagerBase
#include <haxe/ui/backend/FocusManagerBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_FocusManagerImpl
#include <haxe/ui/backend/FocusManagerImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ImageBase
#include <haxe/ui/backend/ImageBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ImageDisplayImpl
#include <haxe/ui/backend/ImageDisplayImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ImageSurface
#include <haxe/ui/backend/ImageSurface.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ScreenBase
#include <haxe/ui/backend/ScreenBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ScreenImpl
#include <haxe/ui/backend/ScreenImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_TextBase
#include <haxe/ui/backend/TextBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_TextDisplayImpl
#include <haxe/ui/backend/TextDisplayImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_TextInputImpl
#include <haxe/ui/backend/TextInputImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_openfl_EventMapper
#include <haxe/ui/backend/openfl/EventMapper.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_openfl_FilterConverter
#include <haxe/ui/backend/openfl/FilterConverter.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_openfl_OpenFLStyleHelper
#include <haxe/ui/backend/openfl/OpenFLStyleHelper.h>
#endif
#ifndef INCLUDED_haxe_ui_core_Component
#include <haxe/ui/core/Component.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentBounds
#include <haxe/ui/core/ComponentBounds.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentCommon
#include <haxe/ui/core/ComponentCommon.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentContainer
#include <haxe/ui/core/ComponentContainer.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentEvents
#include <haxe/ui/core/ComponentEvents.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentLayout
#include <haxe/ui/core/ComponentLayout.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentValidation
#include <haxe/ui/core/ComponentValidation.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IClonable
#include <haxe/ui/core/IClonable.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ImageDisplay
#include <haxe/ui/core/ImageDisplay.h>
#endif
#ifndef INCLUDED_haxe_ui_core_Screen
#include <haxe/ui/core/Screen.h>
#endif
#ifndef INCLUDED_haxe_ui_core_TextDisplay
#include <haxe/ui/core/TextDisplay.h>
#endif
#ifndef INCLUDED_haxe_ui_core_TextInput
#include <haxe/ui/core/TextInput.h>
#endif
#ifndef INCLUDED_haxe_ui_events_KeyboardEvent
#include <haxe/ui/events/KeyboardEvent.h>
#endif
#ifndef INCLUDED_haxe_ui_events_MouseEvent
#include <haxe/ui/events/MouseEvent.h>
#endif
#ifndef INCLUDED_haxe_ui_events_UIEvent
#include <haxe/ui/events/UIEvent.h>
#endif
#ifndef INCLUDED_haxe_ui_filters_Filter
#include <haxe/ui/filters/Filter.h>
#endif
#ifndef INCLUDED_haxe_ui_focus_FocusManager
#include <haxe/ui/focus/FocusManager.h>
#endif
#ifndef INCLUDED_haxe_ui_geom_Point
#include <haxe/ui/geom/Point.h>
#endif
#ifndef INCLUDED_haxe_ui_geom_Rectangle
#include <haxe/ui/geom/Rectangle.h>
#endif
#ifndef INCLUDED_haxe_ui_styles_Style
#include <haxe/ui/styles/Style.h>
#endif
#ifndef INCLUDED_haxe_ui_validation_IValidating
#include <haxe/ui/validation/IValidating.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_Graphics
#include <openfl/display/Graphics.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_Event
#include <openfl/events/Event.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_KeyboardEvent
#include <openfl/events/KeyboardEvent.h>
#endif
#ifndef INCLUDED_openfl_events_MouseEvent
#include <openfl/events/MouseEvent.h>
#endif
#ifndef INCLUDED_openfl_filters_BitmapFilter
#include <openfl/filters/BitmapFilter.h>
#endif
#ifndef INCLUDED_openfl_geom_Point
#include <openfl/geom/Point.h>
#endif
#ifndef INCLUDED_openfl_geom_Rectangle
#include <openfl/geom/Rectangle.h>
#endif
#ifndef INCLUDED_openfl_text_TextField
#include <openfl/text/TextField.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_6354e66e0651e41a_22_new,"haxe.ui.backend.ComponentImpl","new",0x2c83d563,"haxe.ui.backend.ComponentImpl.new","haxe/ui/backend/ComponentImpl.hx",22,0xefd7100e)
HX_LOCAL_STACK_FRAME(_hx_pos_6354e66e0651e41a_43_onAddedToStage,"haxe.ui.backend.ComponentImpl","onAddedToStage",0x9a76e5ff,"haxe.ui.backend.ComponentImpl.onAddedToStage","haxe/ui/backend/ComponentImpl.hx",43,0xefd7100e)
HX_LOCAL_STACK_FRAME(_hx_pos_6354e66e0651e41a_57_onRemovedFromStage,"haxe.ui.backend.ComponentImpl","onRemovedFromStage",0x62b7e2d0,"haxe.ui.backend.ComponentImpl.onRemovedFromStage","haxe/ui/backend/ComponentImpl.hx",57,0xefd7100e)
HX_LOCAL_STACK_FRAME(_hx_pos_6354e66e0651e41a_66_recursiveReady,"haxe.ui.backend.ComponentImpl","recursiveReady",0xcd260b6e,"haxe.ui.backend.ComponentImpl.recursiveReady","haxe/ui/backend/ComponentImpl.hx",66,0xefd7100e)
HX_LOCAL_STACK_FRAME(_hx_pos_6354e66e0651e41a_78_handlePosition,"haxe.ui.backend.ComponentImpl","handlePosition",0x7d042c4e,"haxe.ui.backend.ComponentImpl.handlePosition","haxe/ui/backend/ComponentImpl.hx",78,0xefd7100e)
HX_LOCAL_STACK_FRAME(_hx_pos_6354e66e0651e41a_88_handleSize,"haxe.ui.backend.ComponentImpl","handleSize",0xcc9b35e6,"haxe.ui.backend.ComponentImpl.handleSize","haxe/ui/backend/ComponentImpl.hx",88,0xefd7100e)
HX_LOCAL_STACK_FRAME(_hx_pos_6354e66e0651e41a_99_handleClipRect,"haxe.ui.backend.ComponentImpl","handleClipRect",0x0a741bb9,"haxe.ui.backend.ComponentImpl.handleClipRect","haxe/ui/backend/ComponentImpl.hx",99,0xefd7100e)
HX_LOCAL_STACK_FRAME(_hx_pos_6354e66e0651e41a_112_createTextDisplay,"haxe.ui.backend.ComponentImpl","createTextDisplay",0xb2aca3bc,"haxe.ui.backend.ComponentImpl.createTextDisplay","haxe/ui/backend/ComponentImpl.hx",112,0xefd7100e)
HX_LOCAL_STACK_FRAME(_hx_pos_6354e66e0651e41a_121_createTextInput,"haxe.ui.backend.ComponentImpl","createTextInput",0x3fe50b04,"haxe.ui.backend.ComponentImpl.createTextInput","haxe/ui/backend/ComponentImpl.hx",121,0xefd7100e)
HX_LOCAL_STACK_FRAME(_hx_pos_6354e66e0651e41a_132_createImageDisplay,"haxe.ui.backend.ComponentImpl","createImageDisplay",0xf55ef7a0,"haxe.ui.backend.ComponentImpl.createImageDisplay","haxe/ui/backend/ComponentImpl.hx",132,0xefd7100e)
HX_LOCAL_STACK_FRAME(_hx_pos_6354e66e0651e41a_141_removeImageDisplay,"haxe.ui.backend.ComponentImpl","removeImageDisplay",0x4776f8e8,"haxe.ui.backend.ComponentImpl.removeImageDisplay","haxe/ui/backend/ComponentImpl.hx",141,0xefd7100e)
HX_LOCAL_STACK_FRAME(_hx_pos_6354e66e0651e41a_153_handleAddComponent,"haxe.ui.backend.ComponentImpl","handleAddComponent",0xacf0d481,"haxe.ui.backend.ComponentImpl.handleAddComponent","haxe/ui/backend/ComponentImpl.hx",153,0xefd7100e)
HX_LOCAL_STACK_FRAME(_hx_pos_6354e66e0651e41a_158_handleAddComponentAt,"haxe.ui.backend.ComponentImpl","handleAddComponentAt",0x6a2fefd4,"haxe.ui.backend.ComponentImpl.handleAddComponentAt","haxe/ui/backend/ComponentImpl.hx",158,0xefd7100e)
HX_LOCAL_STACK_FRAME(_hx_pos_6354e66e0651e41a_163_handleRemoveComponent,"haxe.ui.backend.ComponentImpl","handleRemoveComponent",0x2303eed4,"haxe.ui.backend.ComponentImpl.handleRemoveComponent","haxe/ui/backend/ComponentImpl.hx",163,0xefd7100e)
HX_LOCAL_STACK_FRAME(_hx_pos_6354e66e0651e41a_170_handleRemoveComponentAt,"haxe.ui.backend.ComponentImpl","handleRemoveComponentAt",0xdefc84e7,"haxe.ui.backend.ComponentImpl.handleRemoveComponentAt","haxe/ui/backend/ComponentImpl.hx",170,0xefd7100e)
HX_LOCAL_STACK_FRAME(_hx_pos_6354e66e0651e41a_176_handleSetComponentIndex,"haxe.ui.backend.ComponentImpl","handleSetComponentIndex",0x46e92c12,"haxe.ui.backend.ComponentImpl.handleSetComponentIndex","haxe/ui/backend/ComponentImpl.hx",176,0xefd7100e)
HX_LOCAL_STACK_FRAME(_hx_pos_6354e66e0651e41a_179_applyStyle,"haxe.ui.backend.ComponentImpl","applyStyle",0x91111240,"haxe.ui.backend.ComponentImpl.applyStyle","haxe/ui/backend/ComponentImpl.hx",179,0xefd7100e)
HX_LOCAL_STACK_FRAME(_hx_pos_6354e66e0651e41a_208_applyUseHandCursor,"haxe.ui.backend.ComponentImpl","applyUseHandCursor",0x677c6edb,"haxe.ui.backend.ComponentImpl.applyUseHandCursor","haxe/ui/backend/ComponentImpl.hx",208,0xefd7100e)
HX_LOCAL_STACK_FRAME(_hx_pos_6354e66e0651e41a_226_set_visible,"haxe.ui.backend.ComponentImpl","set_visible",0x3f9d1f98,"haxe.ui.backend.ComponentImpl.set_visible","haxe/ui/backend/ComponentImpl.hx",226,0xefd7100e)
HX_LOCAL_STACK_FRAME(_hx_pos_6354e66e0651e41a_237_handleVisibility,"haxe.ui.backend.ComponentImpl","handleVisibility",0x434d2cb7,"haxe.ui.backend.ComponentImpl.handleVisibility","haxe/ui/backend/ComponentImpl.hx",237,0xefd7100e)
HX_LOCAL_STACK_FRAME(_hx_pos_6354e66e0651e41a_242_getComponentOffset,"haxe.ui.backend.ComponentImpl","getComponentOffset",0x3a085e97,"haxe.ui.backend.ComponentImpl.getComponentOffset","haxe/ui/backend/ComponentImpl.hx",242,0xefd7100e)
HX_LOCAL_STACK_FRAME(_hx_pos_6354e66e0651e41a_260_handleFrameworkProperty,"haxe.ui.backend.ComponentImpl","handleFrameworkProperty",0x23009eae,"haxe.ui.backend.ComponentImpl.handleFrameworkProperty","haxe/ui/backend/ComponentImpl.hx",260,0xefd7100e)
HX_LOCAL_STACK_FRAME(_hx_pos_6354e66e0651e41a_280_mapEvent,"haxe.ui.backend.ComponentImpl","mapEvent",0x8eb727fb,"haxe.ui.backend.ComponentImpl.mapEvent","haxe/ui/backend/ComponentImpl.hx",280,0xefd7100e)
HX_LOCAL_STACK_FRAME(_hx_pos_6354e66e0651e41a_307_unmapEvent,"haxe.ui.backend.ComponentImpl","unmapEvent",0xd46d1094,"haxe.ui.backend.ComponentImpl.unmapEvent","haxe/ui/backend/ComponentImpl.hx",307,0xefd7100e)
HX_LOCAL_STACK_FRAME(_hx_pos_6354e66e0651e41a_330___onMouseEvent,"haxe.ui.backend.ComponentImpl","__onMouseEvent",0xf0c844b1,"haxe.ui.backend.ComponentImpl.__onMouseEvent","haxe/ui/backend/ComponentImpl.hx",330,0xefd7100e)
HX_LOCAL_STACK_FRAME(_hx_pos_6354e66e0651e41a_348___onKeyboardEvent,"haxe.ui.backend.ComponentImpl","__onKeyboardEvent",0x1db87a77,"haxe.ui.backend.ComponentImpl.__onKeyboardEvent","haxe/ui/backend/ComponentImpl.hx",348,0xefd7100e)
HX_LOCAL_STACK_FRAME(_hx_pos_6354e66e0651e41a_364___onTextInputChange,"haxe.ui.backend.ComponentImpl","__onTextInputChange",0xa84332f1,"haxe.ui.backend.ComponentImpl.__onTextInputChange","haxe/ui/backend/ComponentImpl.hx",364,0xefd7100e)
HX_LOCAL_STACK_FRAME(_hx_pos_480173924f690e63_523_registerBehaviours,"haxe.ui.backend.ComponentImpl","registerBehaviours",0x8495be36,"haxe.ui.backend.ComponentImpl.registerBehaviours","haxe/ui/macros/Macros.hx",523,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_afe584834299818f_651_cloneComponent,"haxe.ui.backend.ComponentImpl","cloneComponent",0x8a894d7d,"haxe.ui.backend.ComponentImpl.cloneComponent","haxe/ui/macros/helpers/ClassBuilder.hx",651,0x8cdaad7b)
HX_LOCAL_STACK_FRAME(_hx_pos_480173924f690e63_493_self,"haxe.ui.backend.ComponentImpl","self",0xca24e929,"haxe.ui.backend.ComponentImpl.self","haxe/ui/macros/Macros.hx",493,0x27866361)
namespace haxe{
namespace ui{
namespace backend{

void ComponentImpl_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_6354e66e0651e41a_22_new)
HXLINE(  87)		this->styleable = true;
HXLINE(  26)		super::__construct();
HXLINE(  27)		this->set_tabChildren(false);
HXLINE(  28)		this->doubleClickEnabled = true;
HXLINE(  32)		this->_eventMap =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXLINE(  38)		this->addEventListener(HX_("addedToStage",63,22,55,0c),this->onAddedToStage_dyn(),false,0,true);
HXLINE(  39)		this->addEventListener(HX_("removedFromStage",34,21,76,ba),this->onRemovedFromStage_dyn(),false,0,true);
            	}

Dynamic ComponentImpl_obj::__CreateEmpty() { return new ComponentImpl_obj; }

void *ComponentImpl_obj::_hx_vtable = 0;

Dynamic ComponentImpl_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< ComponentImpl_obj > _hx_result = new ComponentImpl_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool ComponentImpl_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x1f4df417) {
		if (inClassId<=(int)0x0f2dd418) {
			if (inClassId<=(int)0x0330636f) {
				if (inClassId<=(int)0x01557b4b) {
					return inClassId==(int)0x00000001 || inClassId==(int)0x01557b4b;
				} else {
					return inClassId==(int)0x0330636f;
				}
			} else {
				return inClassId==(int)0x0c89e854 || inClassId==(int)0x0f2dd418;
			}
		} else {
			if (inClassId<=(int)0x13d76ae7) {
				return inClassId==(int)0x1395e371 || inClassId==(int)0x13d76ae7;
			} else {
				return inClassId==(int)0x1f4df417;
			}
		}
	} else {
		if (inClassId<=(int)0x6b353933) {
			if (inClassId<=(int)0x4af7dd8e) {
				if (inClassId<=(int)0x2ccba775) {
					return inClassId==(int)0x241b0321 || inClassId==(int)0x2ccba775;
				} else {
					return inClassId==(int)0x4af7dd8e;
				}
			} else {
				return inClassId==(int)0x6b353933;
			}
		} else {
			return inClassId==(int)0x715d6dae || inClassId==(int)0x7ec24579;
		}
	}
}

void ComponentImpl_obj::onAddedToStage( ::openfl::events::Event event){
            	HX_STACKFRAME(&_hx_pos_6354e66e0651e41a_43_onAddedToStage)
HXLINE(  44)		this->removeEventListener(HX_("addedToStage",63,22,55,0c),this->onAddedToStage_dyn(),null());
HXLINE(  45)		 ::haxe::ui::core::Component component = ::hx::TCast<  ::haxe::ui::core::Component >::cast(::hx::ObjectPtr<OBJ_>(this));
HXLINE(  46)		bool _hx_tmp;
HXDLIN(  46)		if (::hx::IsNull( component->parentComponent )) {
HXLINE(  46)			_hx_tmp = (::haxe::ui::core::Screen_obj::get_instance()->rootComponents->indexOf(component,null()) == -1);
            		}
            		else {
HXLINE(  46)			_hx_tmp = false;
            		}
HXDLIN(  46)		if (_hx_tmp) {
HXLINE(  47)			this->set_scaleX(::haxe::ui::Toolkit_obj::get_scaleX());
HXLINE(  48)			this->set_scaleY(::haxe::ui::Toolkit_obj::get_scaleY());
HXLINE(  49)			::haxe::ui::core::Screen_obj::get_instance()->rootComponents->push(component);
HXLINE(  50)			::haxe::ui::focus::FocusManager_obj::get_instance()->pushView(component);
HXLINE(  51)			::haxe::ui::core::Screen_obj::get_instance()->onContainerResize(null());
            		}
HXLINE(  53)		this->recursiveReady();
            	}


HX_DEFINE_DYNAMIC_FUNC1(ComponentImpl_obj,onAddedToStage,(void))

void ComponentImpl_obj::onRemovedFromStage( ::openfl::events::Event event){
            	HX_STACKFRAME(&_hx_pos_6354e66e0651e41a_57_onRemovedFromStage)
HXLINE(  58)		this->removeEventListener(HX_("removedFromStage",34,21,76,ba),this->onRemovedFromStage_dyn(),null());
HXLINE(  59)		 ::haxe::ui::core::Component component = ::hx::TCast<  ::haxe::ui::core::Component >::cast(::hx::ObjectPtr<OBJ_>(this));
HXLINE(  60)		bool _hx_tmp;
HXDLIN(  60)		if (::hx::IsNull( component->parentComponent )) {
HXLINE(  60)			_hx_tmp = (::haxe::ui::core::Screen_obj::get_instance()->rootComponents->indexOf(component,null()) != -1);
            		}
            		else {
HXLINE(  60)			_hx_tmp = false;
            		}
HXDLIN(  60)		if (_hx_tmp) {
HXLINE(  61)			::haxe::ui::core::Screen_obj::get_instance()->rootComponents->remove(component);
HXLINE(  62)			::haxe::ui::focus::FocusManager_obj::get_instance()->removeView(component);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(ComponentImpl_obj,onRemovedFromStage,(void))

void ComponentImpl_obj::recursiveReady(){
            	HX_STACKFRAME(&_hx_pos_6354e66e0651e41a_66_recursiveReady)
HXLINE(  67)		 ::haxe::ui::core::Component component = ::hx::TCast<  ::haxe::ui::core::Component >::cast(::hx::ObjectPtr<OBJ_>(this));
HXLINE(  68)		bool isReady = component->get_isReady();
HXLINE(  69)		component->ready();
HXLINE(  70)		if ((isReady == false)) {
HXLINE(  71)			component->syncComponentValidation(null());
            		}
HXLINE(  73)		{
HXLINE(  73)			int _g = 0;
HXDLIN(  73)			::Array< ::Dynamic> _g1;
HXDLIN(  73)			if (::hx::IsNull( component->_children )) {
HXLINE(  73)				_g1 = ::Array_obj< ::Dynamic>::__new(0);
            			}
            			else {
HXLINE(  73)				_g1 = component->_children;
            			}
HXDLIN(  73)			while((_g < _g1->length)){
HXLINE(  73)				 ::haxe::ui::core::Component child = _g1->__get(_g).StaticCast<  ::haxe::ui::core::Component >();
HXDLIN(  73)				_g = (_g + 1);
HXLINE(  74)				child->recursiveReady();
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(ComponentImpl_obj,recursiveReady,(void))

void ComponentImpl_obj::handlePosition( ::Dynamic left, ::Dynamic top, ::haxe::ui::styles::Style style){
            	HX_STACKFRAME(&_hx_pos_6354e66e0651e41a_78_handlePosition)
HXLINE(  79)		if (::hx::IsNotNull( left )) {
HXLINE(  80)			this->set_x(::Math_obj::fround(( (Float)(left) )));
            		}
HXLINE(  82)		if (::hx::IsNotNull( top )) {
HXLINE(  83)			this->set_y(::Math_obj::fround(( (Float)(top) )));
            		}
            	}


void ComponentImpl_obj::handleSize( ::Dynamic width, ::Dynamic height, ::haxe::ui::styles::Style style){
            	HX_STACKFRAME(&_hx_pos_6354e66e0651e41a_88_handleSize)
HXLINE(  89)		bool _hx_tmp;
HXDLIN(  89)		bool _hx_tmp1;
HXDLIN(  89)		bool _hx_tmp2;
HXDLIN(  89)		if (::hx::IsNotNull( width )) {
HXLINE(  89)			_hx_tmp2 = ::hx::IsNull( height );
            		}
            		else {
HXLINE(  89)			_hx_tmp2 = true;
            		}
HXDLIN(  89)		if (!(_hx_tmp2)) {
HXLINE(  89)			_hx_tmp1 = ::hx::IsLessEq( width,0 );
            		}
            		else {
HXLINE(  89)			_hx_tmp1 = true;
            		}
HXDLIN(  89)		if (!(_hx_tmp1)) {
HXLINE(  89)			_hx_tmp = ::hx::IsLessEq( height,0 );
            		}
            		else {
HXLINE(  89)			_hx_tmp = true;
            		}
HXDLIN(  89)		if (_hx_tmp) {
HXLINE(  90)			return;
            		}
HXLINE(  93)		if ((this->styleable == true)) {
HXLINE(  94)			 ::openfl::display::Graphics _hx_tmp3 = this->get_graphics();
HXDLIN(  94)			::haxe::ui::backend::openfl::OpenFLStyleHelper_obj::paintStyleSection(_hx_tmp3,style,::Math_obj::fround(( (Float)(width) )),::Math_obj::fround(( (Float)(height) )),null(),null(),null());
            		}
            	}


void ComponentImpl_obj::handleClipRect( ::haxe::ui::geom::Rectangle value){
            	HX_GC_STACKFRAME(&_hx_pos_6354e66e0651e41a_99_handleClipRect)
HXDLIN(  99)		if (::hx::IsNull( value )) {
HXLINE( 100)			this->set_scrollRect(null());
            		}
            		else {
HXLINE( 102)			this->set_scrollRect( ::openfl::geom::Rectangle_obj::__alloc( HX_CTX ,::Math_obj::fround(value->left),::Math_obj::fround(value->top),::Math_obj::fround(value->width),::Math_obj::fround(value->height)));
            		}
            	}


 ::haxe::ui::core::TextDisplay ComponentImpl_obj::createTextDisplay(::String text){
            	HX_STACKFRAME(&_hx_pos_6354e66e0651e41a_112_createTextDisplay)
HXLINE( 113)		if (::hx::IsNull( this->_textDisplay )) {
HXLINE( 114)			this->super::createTextDisplay(text);
HXLINE( 115)			this->addChild(this->_textDisplay->textField);
            		}
HXLINE( 118)		return this->_textDisplay;
            	}


 ::haxe::ui::core::TextInput ComponentImpl_obj::createTextInput(::String text){
            	HX_STACKFRAME(&_hx_pos_6354e66e0651e41a_121_createTextInput)
HXLINE( 122)		if (::hx::IsNull( this->_textInput )) {
HXLINE( 123)			this->super::createTextInput(text);
HXLINE( 124)			this->addChild(this->_textInput->textField);
            		}
HXLINE( 126)		return this->_textInput;
            	}


 ::haxe::ui::core::ImageDisplay ComponentImpl_obj::createImageDisplay(){
            	HX_STACKFRAME(&_hx_pos_6354e66e0651e41a_132_createImageDisplay)
HXLINE( 133)		if (::hx::IsNull( this->_imageDisplay )) {
HXLINE( 134)			this->super::createImageDisplay();
HXLINE( 135)			this->addChild(this->_imageDisplay->sprite);
            		}
HXLINE( 137)		return this->_imageDisplay;
            	}


void ComponentImpl_obj::removeImageDisplay(){
            	HX_STACKFRAME(&_hx_pos_6354e66e0651e41a_141_removeImageDisplay)
HXDLIN( 141)		if (::hx::IsNotNull( this->_imageDisplay )) {
HXLINE( 142)			if ((this->contains(this->_imageDisplay->sprite) == true)) {
HXLINE( 143)				this->removeChild(this->_imageDisplay->sprite);
            			}
HXLINE( 145)			this->_imageDisplay->dispose();
HXLINE( 146)			this->_imageDisplay = null();
            		}
            	}


 ::haxe::ui::core::Component ComponentImpl_obj::handleAddComponent( ::haxe::ui::core::Component child){
            	HX_STACKFRAME(&_hx_pos_6354e66e0651e41a_153_handleAddComponent)
HXLINE( 154)		this->addChild(child);
HXLINE( 155)		return child;
            	}


 ::haxe::ui::core::Component ComponentImpl_obj::handleAddComponentAt( ::haxe::ui::core::Component child,int index){
            	HX_STACKFRAME(&_hx_pos_6354e66e0651e41a_158_handleAddComponentAt)
HXLINE( 159)		this->addChildAt(child,index);
HXLINE( 160)		return child;
            	}


 ::haxe::ui::core::Component ComponentImpl_obj::handleRemoveComponent( ::haxe::ui::core::Component child,::hx::Null< bool >  __o_dispose){
            		bool dispose = __o_dispose.Default(true);
            	HX_STACKFRAME(&_hx_pos_6354e66e0651e41a_163_handleRemoveComponent)
HXLINE( 164)		if (this->contains(child)) {
HXLINE( 165)			this->removeChild(child);
            		}
HXLINE( 167)		return child;
            	}


 ::haxe::ui::core::Component ComponentImpl_obj::handleRemoveComponentAt(int index,::hx::Null< bool >  __o_dispose){
            		bool dispose = __o_dispose.Default(true);
            	HX_STACKFRAME(&_hx_pos_6354e66e0651e41a_170_handleRemoveComponentAt)
HXLINE( 171)		this->removeChildAt(index);
HXLINE( 172)		return null();
            	}


void ComponentImpl_obj::handleSetComponentIndex( ::haxe::ui::core::Component child,int index){
            	HX_STACKFRAME(&_hx_pos_6354e66e0651e41a_176_handleSetComponentIndex)
HXDLIN( 176)		this->setChildIndex(child,index);
            	}


void ComponentImpl_obj::applyStyle( ::haxe::ui::styles::Style style){
            	HX_STACKFRAME(&_hx_pos_6354e66e0651e41a_179_applyStyle)
HXLINE( 180)		bool useHandCursor = false;
HXLINE( 181)		bool _hx_tmp;
HXDLIN( 181)		if (::hx::IsNotNull( style->cursor )) {
HXLINE( 181)			_hx_tmp = (style->cursor == HX_("pointer",bd,c0,21,51));
            		}
            		else {
HXLINE( 181)			_hx_tmp = false;
            		}
HXDLIN( 181)		if (_hx_tmp) {
HXLINE( 182)			useHandCursor = true;
            		}
HXLINE( 184)		this->applyUseHandCursor(useHandCursor);
HXLINE( 186)		bool _hx_tmp1;
HXDLIN( 186)		if (::hx::IsNotNull( style->filter )) {
HXLINE( 186)			_hx_tmp1 = (style->filter->length > 0);
            		}
            		else {
HXLINE( 186)			_hx_tmp1 = false;
            		}
HXDLIN( 186)		if (_hx_tmp1) {
HXLINE( 187)			::Array< ::Dynamic> array = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 188)			{
HXLINE( 188)				int _g = 0;
HXDLIN( 188)				::Array< ::Dynamic> _g1 = style->filter;
HXDLIN( 188)				while((_g < _g1->length)){
HXLINE( 188)					 ::haxe::ui::filters::Filter fa = _g1->__get(_g).StaticCast<  ::haxe::ui::filters::Filter >();
HXDLIN( 188)					_g = (_g + 1);
HXLINE( 189)					 ::openfl::filters::BitmapFilter f = ::haxe::ui::backend::openfl::FilterConverter_obj::convertFilter(fa);
HXLINE( 190)					if (::hx::IsNotNull( f )) {
HXLINE( 191)						array->push(f);
            					}
            				}
            			}
HXLINE( 194)			this->set_filters(array);
            		}
            		else {
HXLINE( 196)			this->set_filters(null());
            		}
HXLINE( 199)		if (::hx::IsNotNull( style->hidden )) {
HXLINE( 200)			this->set_visible(!(( (bool)(style->hidden) )));
            		}
HXLINE( 203)		if (::hx::IsNotNull( style->opacity )) {
HXLINE( 204)			this->set_alpha(( (Float)(style->opacity) ));
            		}
            	}


void ComponentImpl_obj::applyUseHandCursor(bool use){
            	HX_STACKFRAME(&_hx_pos_6354e66e0651e41a_208_applyUseHandCursor)
HXLINE( 209)		this->set_buttonMode(use);
HXLINE( 210)		this->useHandCursor = use;
HXLINE( 211)		if (this->hasImageDisplay()) {
HXLINE( 212)			this->getImageDisplay()->sprite->set_buttonMode(use);
HXLINE( 213)			this->getImageDisplay()->sprite->useHandCursor = use;
            		}
HXLINE( 215)		{
HXLINE( 215)			int _g = 0;
HXDLIN( 215)			int _g1 = this->get_numChildren();
HXDLIN( 215)			while((_g < _g1)){
HXLINE( 215)				_g = (_g + 1);
HXDLIN( 215)				int n = (_g - 1);
HXLINE( 216)				 ::openfl::display::DisplayObject c = this->getChildAt(n);
HXLINE( 217)				if (::Std_obj::isOfType(c,::hx::ClassOf< ::openfl::display::Sprite >())) {
HXLINE( 218)					 ::openfl::display::Sprite s = ::hx::TCast<  ::openfl::display::Sprite >::cast(c);
HXLINE( 219)					s->set_buttonMode(use);
HXLINE( 220)					s->useHandCursor = use;
            				}
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(ComponentImpl_obj,applyUseHandCursor,(void))

bool ComponentImpl_obj::set_visible(bool value){
            	HX_STACKFRAME(&_hx_pos_6354e66e0651e41a_226_set_visible)
HXLINE( 230)		bool v = this->super::set_visible(value);
HXLINE( 232)		::hx::TCast<  ::haxe::ui::core::Component >::cast(::hx::ObjectPtr<OBJ_>(this))->set_hidden(!(value));
HXLINE( 233)		return v;
            	}


void ComponentImpl_obj::handleVisibility(bool show){
            	HX_STACKFRAME(&_hx_pos_6354e66e0651e41a_237_handleVisibility)
HXDLIN( 237)		if ((show != this->super::get_visible())) {
HXLINE( 238)			this->super::set_visible(show);
            		}
            	}


 ::haxe::ui::geom::Point ComponentImpl_obj::getComponentOffset(){
            	HX_GC_STACKFRAME(&_hx_pos_6354e66e0651e41a_242_getComponentOffset)
HXLINE( 243)		 ::openfl::display::DisplayObjectContainer p = ::hx::ObjectPtr<OBJ_>(this);
HXLINE( 244)		 ::openfl::display::DisplayObjectContainer s = null();
HXLINE( 245)		while(::hx::IsNotNull( p )){
HXLINE( 246)			if ((::Std_obj::isOfType(p,::hx::ClassOf< ::haxe::ui::backend::ComponentImpl >()) == false)) {
HXLINE( 247)				s = p;
HXLINE( 248)				goto _hx_goto_23;
            			}
HXLINE( 250)			p = p->parent;
            		}
            		_hx_goto_23:;
HXLINE( 252)		if (::hx::IsNull( s )) {
HXLINE( 253)			return  ::haxe::ui::geom::Point_obj::__alloc( HX_CTX ,0,0);
            		}
HXLINE( 255)		 ::openfl::geom::Point globalPoint = s->localToGlobal( ::openfl::geom::Point_obj::__alloc( HX_CTX ,0,0));
HXLINE( 256)		return  ::haxe::ui::geom::Point_obj::__alloc( HX_CTX ,globalPoint->x,globalPoint->y);
            	}


void ComponentImpl_obj::handleFrameworkProperty(::String id, ::Dynamic value){
            	HX_STACKFRAME(&_hx_pos_6354e66e0651e41a_260_handleFrameworkProperty)
HXDLIN( 260)		if ((id == HX_("allowMouseInteraction",56,34,ef,e0))) {
HXLINE( 262)			if ((( (bool)(value) ) == true)) {
HXLINE( 263)				this->mouseEnabled = true;
HXLINE( 264)				if (this->hasImageDisplay()) {
HXLINE( 265)					this->getImageDisplay()->sprite->mouseEnabled = true;
            				}
            			}
            			else {
HXLINE( 268)				this->mouseEnabled = false;
HXLINE( 269)				if (this->hasImageDisplay()) {
HXLINE( 270)					this->getImageDisplay()->sprite->mouseEnabled = false;
            				}
            			}
            		}
            	}


void ComponentImpl_obj::mapEvent(::String type, ::Dynamic listener){
            	HX_STACKFRAME(&_hx_pos_6354e66e0651e41a_280_mapEvent)
HXDLIN( 280)		::String _hx_switch_0 = type;
            		if (  (_hx_switch_0==HX_("change",70,91,72,b7)) ){
HXLINE( 297)			if ((this->_eventMap->exists(HX_("change",70,91,72,b7)) == false)) {
HXLINE( 298)				if ((this->hasTextInput() == true)) {
HXLINE( 299)					this->_eventMap->set(HX_("change",70,91,72,b7),listener);
HXLINE( 300)					this->getTextInput()->textField->addEventListener(HX_("change",70,91,72,b7),this->_hx___onTextInputChange_dyn(),false,0,true);
            				}
            			}
HXLINE( 297)			goto _hx_goto_26;
            		}
            		if (  (_hx_switch_0==HX_("keydown",81,3d,6e,b1)) ||  (_hx_switch_0==HX_("keyup",ba,d5,fe,de)) ){
HXLINE( 291)			if ((this->_eventMap->exists(type) == false)) {
HXLINE( 292)				this->_eventMap->set(type,listener);
HXLINE( 293)				this->addEventListener(::haxe::ui::backend::openfl::EventMapper_obj::HAXEUI_TO_OPENFL->get_string(type),this->_hx___onKeyboardEvent_dyn(),false,0,true);
            			}
HXLINE( 291)			goto _hx_goto_26;
            		}
            		if (  (_hx_switch_0==HX_("click",48,7c,5e,48)) ||  (_hx_switch_0==HX_("doubleclick",97,93,48,3a)) ||  (_hx_switch_0==HX_("mousedown",07,85,e9,03)) ||  (_hx_switch_0==HX_("mousemove",b6,6f,dc,09)) ||  (_hx_switch_0==HX_("mouseout",89,2f,36,a4)) ||  (_hx_switch_0==HX_("mouseover",f9,1d,34,0b)) ||  (_hx_switch_0==HX_("mouseup",c0,0f,73,c0)) ||  (_hx_switch_0==HX_("mousewheel",56,b8,59,54)) ||  (_hx_switch_0==HX_("rightclick",ec,f2,f5,b7)) ||  (_hx_switch_0==HX_("rightmousedown",ab,1d,2b,41)) ||  (_hx_switch_0==HX_("rightmouseup",64,77,d0,dd)) ){
HXLINE( 285)			if ((this->_eventMap->exists(type) == false)) {
HXLINE( 286)				this->_eventMap->set(type,listener);
HXLINE( 287)				this->addEventListener(::haxe::ui::backend::openfl::EventMapper_obj::HAXEUI_TO_OPENFL->get_string(type),this->_hx___onMouseEvent_dyn(),false,0,true);
            			}
HXLINE( 285)			goto _hx_goto_26;
            		}
            		_hx_goto_26:;
            	}


void ComponentImpl_obj::unmapEvent(::String type, ::Dynamic listener){
            	HX_STACKFRAME(&_hx_pos_6354e66e0651e41a_307_unmapEvent)
HXDLIN( 307)		::String _hx_switch_0 = type;
            		if (  (_hx_switch_0==HX_("change",70,91,72,b7)) ){
HXLINE( 320)			this->_eventMap->remove(type);
HXLINE( 321)			if ((this->hasTextInput() == true)) {
HXLINE( 322)				this->getTextInput()->textField->removeEventListener(HX_("change",70,91,72,b7),this->_hx___onTextInputChange_dyn(),null());
            			}
HXLINE( 319)			goto _hx_goto_28;
            		}
            		if (  (_hx_switch_0==HX_("keydown",81,3d,6e,b1)) ||  (_hx_switch_0==HX_("keyup",ba,d5,fe,de)) ){
HXLINE( 316)			this->_eventMap->remove(type);
HXLINE( 317)			this->removeEventListener(::haxe::ui::backend::openfl::EventMapper_obj::HAXEUI_TO_OPENFL->get_string(type),this->_hx___onKeyboardEvent_dyn(),null());
HXLINE( 315)			goto _hx_goto_28;
            		}
            		if (  (_hx_switch_0==HX_("click",48,7c,5e,48)) ||  (_hx_switch_0==HX_("doubleclick",97,93,48,3a)) ||  (_hx_switch_0==HX_("mousedown",07,85,e9,03)) ||  (_hx_switch_0==HX_("mousemove",b6,6f,dc,09)) ||  (_hx_switch_0==HX_("mouseout",89,2f,36,a4)) ||  (_hx_switch_0==HX_("mouseover",f9,1d,34,0b)) ||  (_hx_switch_0==HX_("mouseup",c0,0f,73,c0)) ||  (_hx_switch_0==HX_("mousewheel",56,b8,59,54)) ||  (_hx_switch_0==HX_("rightclick",ec,f2,f5,b7)) ||  (_hx_switch_0==HX_("rightmousedown",ab,1d,2b,41)) ||  (_hx_switch_0==HX_("rightmouseup",64,77,d0,dd)) ){
HXLINE( 312)			this->_eventMap->remove(type);
HXLINE( 313)			this->removeEventListener(::haxe::ui::backend::openfl::EventMapper_obj::HAXEUI_TO_OPENFL->get_string(type),this->_hx___onMouseEvent_dyn(),null());
HXLINE( 308)			goto _hx_goto_28;
            		}
            		_hx_goto_28:;
            	}


void ComponentImpl_obj::_hx___onMouseEvent( ::openfl::events::MouseEvent event){
            	HX_GC_STACKFRAME(&_hx_pos_6354e66e0651e41a_330___onMouseEvent)
HXLINE( 331)		::String type = ::haxe::ui::backend::openfl::EventMapper_obj::OPENFL_TO_HAXEUI->get_string(event->type);
HXLINE( 332)		if (::hx::IsNotNull( type )) {
HXLINE( 333)			 ::Dynamic fn = this->_eventMap->get(type);
HXLINE( 334)			if (::hx::IsNotNull( fn )) {
HXLINE( 335)				 ::haxe::ui::events::MouseEvent mouseEvent =  ::haxe::ui::events::MouseEvent_obj::__alloc( HX_CTX ,type);
HXLINE( 336)				mouseEvent->_originalEvent = event;
HXLINE( 337)				Float event1 = event->stageX;
HXDLIN( 337)				mouseEvent->screenX = (event1 / ::haxe::ui::Toolkit_obj::get_scaleX());
HXLINE( 338)				Float event2 = event->stageY;
HXDLIN( 338)				mouseEvent->screenY = (event2 / ::haxe::ui::Toolkit_obj::get_scaleY());
HXLINE( 339)				mouseEvent->buttonDown = event->buttonDown;
HXLINE( 340)				mouseEvent->delta = ( (Float)(event->delta) );
HXLINE( 341)				mouseEvent->ctrlKey = event->ctrlKey;
HXLINE( 342)				mouseEvent->shiftKey = event->shiftKey;
HXLINE( 343)				fn(mouseEvent);
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(ComponentImpl_obj,_hx___onMouseEvent,(void))

void ComponentImpl_obj::_hx___onKeyboardEvent( ::openfl::events::KeyboardEvent event){
            	HX_GC_STACKFRAME(&_hx_pos_6354e66e0651e41a_348___onKeyboardEvent)
HXLINE( 349)		::String type = ::haxe::ui::backend::openfl::EventMapper_obj::OPENFL_TO_HAXEUI->get_string(event->type);
HXLINE( 350)		if (::hx::IsNotNull( type )) {
HXLINE( 351)			 ::Dynamic fn = this->_eventMap->get(type);
HXLINE( 352)			if (::hx::IsNotNull( fn )) {
HXLINE( 353)				 ::haxe::ui::events::KeyboardEvent keyboardEvent =  ::haxe::ui::events::KeyboardEvent_obj::__alloc( HX_CTX ,type);
HXLINE( 354)				keyboardEvent->_originalEvent = event;
HXLINE( 355)				keyboardEvent->keyCode = event->keyCode;
HXLINE( 356)				keyboardEvent->altKey = event->altKey;
HXLINE( 357)				keyboardEvent->ctrlKey = event->ctrlKey;
HXLINE( 358)				keyboardEvent->shiftKey = event->shiftKey;
HXLINE( 359)				fn(keyboardEvent);
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(ComponentImpl_obj,_hx___onKeyboardEvent,(void))

void ComponentImpl_obj::_hx___onTextInputChange( ::openfl::events::Event event){
            	HX_GC_STACKFRAME(&_hx_pos_6354e66e0651e41a_364___onTextInputChange)
HXLINE( 365)		 ::Dynamic fn = this->_eventMap->get(HX_("change",70,91,72,b7));
HXLINE( 366)		if (::hx::IsNotNull( fn )) {
HXLINE( 367)			fn( ::haxe::ui::events::UIEvent_obj::__alloc( HX_CTX ,HX_("change",70,91,72,b7),null(),null()));
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(ComponentImpl_obj,_hx___onTextInputChange,(void))

void ComponentImpl_obj::registerBehaviours(){
            	HX_STACKFRAME(&_hx_pos_480173924f690e63_523_registerBehaviours)
HXDLIN( 523)		this->super::registerBehaviours();
            	}


 ::haxe::ui::core::ComponentContainer ComponentImpl_obj::cloneComponent(){
            	HX_STACKFRAME(&_hx_pos_afe584834299818f_651_cloneComponent)
HXLINE( 441)		 ::haxe::ui::backend::ComponentImpl c = ( ( ::haxe::ui::backend::ComponentImpl)(this->super::cloneComponent()) );
HXLINE( 456)		{
HXLINE( 457)			::Array< ::Dynamic> _hx_tmp;
HXDLIN( 457)			if (::hx::IsNull( this->_children )) {
HXLINE( 457)				_hx_tmp = ::Array_obj< ::Dynamic>::__new(0);
            			}
            			else {
HXLINE( 457)				_hx_tmp = this->_children;
            			}
HXDLIN( 457)			::Array< ::Dynamic> _hx_tmp1;
HXDLIN( 457)			if (::hx::IsNull( c->_children )) {
HXLINE( 457)				_hx_tmp1 = ::Array_obj< ::Dynamic>::__new(0);
            			}
            			else {
HXLINE( 457)				_hx_tmp1 = c->_children;
            			}
HXDLIN( 457)			if ((_hx_tmp->length != _hx_tmp1->length)) {
HXLINE( 458)				int _g = 0;
HXDLIN( 458)				::Array< ::Dynamic> _g1;
HXDLIN( 458)				if (::hx::IsNull( this->_children )) {
HXLINE( 458)					_g1 = ::Array_obj< ::Dynamic>::__new(0);
            				}
            				else {
HXLINE( 458)					_g1 = this->_children;
            				}
HXDLIN( 458)				while((_g < _g1->length)){
HXLINE( 458)					 ::haxe::ui::core::Component child = _g1->__get(_g).StaticCast<  ::haxe::ui::core::Component >();
HXDLIN( 458)					_g = (_g + 1);
HXLINE( 459)					c->addComponent(Dynamic( child->cloneComponent()).StaticCast<  ::haxe::ui::core::Component >());
            				}
            			}
HXLINE( 463)			this->postCloneComponent(( ( ::haxe::ui::core::Component)(c) ));
            		}
HXLINE( 465)		return c;
            	}


 ::haxe::ui::core::ComponentContainer ComponentImpl_obj::self(){
            	HX_GC_STACKFRAME(&_hx_pos_480173924f690e63_493_self)
HXDLIN( 493)		return  ::haxe::ui::backend::ComponentImpl_obj::__alloc( HX_CTX );
            	}



::hx::ObjectPtr< ComponentImpl_obj > ComponentImpl_obj::__new() {
	::hx::ObjectPtr< ComponentImpl_obj > __this = new ComponentImpl_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< ComponentImpl_obj > ComponentImpl_obj::__alloc(::hx::Ctx *_hx_ctx) {
	ComponentImpl_obj *__this = (ComponentImpl_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(ComponentImpl_obj), true, "haxe.ui.backend.ComponentImpl"));
	*(void **)__this = ComponentImpl_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

ComponentImpl_obj::ComponentImpl_obj()
{
}

void ComponentImpl_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(ComponentImpl);
	HX_MARK_MEMBER_NAME(_eventMap,"_eventMap");
	HX_MARK_MEMBER_NAME(styleable,"styleable");
	 ::haxe::ui::backend::ComponentBase_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void ComponentImpl_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(_eventMap,"_eventMap");
	HX_VISIT_MEMBER_NAME(styleable,"styleable");
	 ::haxe::ui::backend::ComponentBase_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val ComponentImpl_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"self") ) { return ::hx::Val( self_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"mapEvent") ) { return ::hx::Val( mapEvent_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"_eventMap") ) { return ::hx::Val( _eventMap ); }
		if (HX_FIELD_EQ(inName,"styleable") ) { return ::hx::Val( styleable ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"handleSize") ) { return ::hx::Val( handleSize_dyn() ); }
		if (HX_FIELD_EQ(inName,"applyStyle") ) { return ::hx::Val( applyStyle_dyn() ); }
		if (HX_FIELD_EQ(inName,"unmapEvent") ) { return ::hx::Val( unmapEvent_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"set_visible") ) { return ::hx::Val( set_visible_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"onAddedToStage") ) { return ::hx::Val( onAddedToStage_dyn() ); }
		if (HX_FIELD_EQ(inName,"recursiveReady") ) { return ::hx::Val( recursiveReady_dyn() ); }
		if (HX_FIELD_EQ(inName,"handlePosition") ) { return ::hx::Val( handlePosition_dyn() ); }
		if (HX_FIELD_EQ(inName,"handleClipRect") ) { return ::hx::Val( handleClipRect_dyn() ); }
		if (HX_FIELD_EQ(inName,"__onMouseEvent") ) { return ::hx::Val( _hx___onMouseEvent_dyn() ); }
		if (HX_FIELD_EQ(inName,"cloneComponent") ) { return ::hx::Val( cloneComponent_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"createTextInput") ) { return ::hx::Val( createTextInput_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"handleVisibility") ) { return ::hx::Val( handleVisibility_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"createTextDisplay") ) { return ::hx::Val( createTextDisplay_dyn() ); }
		if (HX_FIELD_EQ(inName,"__onKeyboardEvent") ) { return ::hx::Val( _hx___onKeyboardEvent_dyn() ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"onRemovedFromStage") ) { return ::hx::Val( onRemovedFromStage_dyn() ); }
		if (HX_FIELD_EQ(inName,"createImageDisplay") ) { return ::hx::Val( createImageDisplay_dyn() ); }
		if (HX_FIELD_EQ(inName,"removeImageDisplay") ) { return ::hx::Val( removeImageDisplay_dyn() ); }
		if (HX_FIELD_EQ(inName,"handleAddComponent") ) { return ::hx::Val( handleAddComponent_dyn() ); }
		if (HX_FIELD_EQ(inName,"applyUseHandCursor") ) { return ::hx::Val( applyUseHandCursor_dyn() ); }
		if (HX_FIELD_EQ(inName,"getComponentOffset") ) { return ::hx::Val( getComponentOffset_dyn() ); }
		if (HX_FIELD_EQ(inName,"registerBehaviours") ) { return ::hx::Val( registerBehaviours_dyn() ); }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"__onTextInputChange") ) { return ::hx::Val( _hx___onTextInputChange_dyn() ); }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"handleAddComponentAt") ) { return ::hx::Val( handleAddComponentAt_dyn() ); }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"handleRemoveComponent") ) { return ::hx::Val( handleRemoveComponent_dyn() ); }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"handleRemoveComponentAt") ) { return ::hx::Val( handleRemoveComponentAt_dyn() ); }
		if (HX_FIELD_EQ(inName,"handleSetComponentIndex") ) { return ::hx::Val( handleSetComponentIndex_dyn() ); }
		if (HX_FIELD_EQ(inName,"handleFrameworkProperty") ) { return ::hx::Val( handleFrameworkProperty_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val ComponentImpl_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"_eventMap") ) { _eventMap=inValue.Cast<  ::haxe::ds::StringMap >(); return inValue; }
		if (HX_FIELD_EQ(inName,"styleable") ) { styleable=inValue.Cast< bool >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void ComponentImpl_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("_eventMap",01,7e,68,08));
	outFields->push(HX_("styleable",4b,ff,5e,eb));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo ComponentImpl_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::haxe::ds::StringMap */ ,(int)offsetof(ComponentImpl_obj,_eventMap),HX_("_eventMap",01,7e,68,08)},
	{::hx::fsBool,(int)offsetof(ComponentImpl_obj,styleable),HX_("styleable",4b,ff,5e,eb)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *ComponentImpl_obj_sStaticStorageInfo = 0;
#endif

static ::String ComponentImpl_obj_sMemberFields[] = {
	HX_("_eventMap",01,7e,68,08),
	HX_("onAddedToStage",22,82,44,36),
	HX_("onRemovedFromStage",73,cc,89,12),
	HX_("recursiveReady",91,a7,f3,68),
	HX_("handlePosition",71,c8,d1,18),
	HX_("styleable",4b,ff,5e,eb),
	HX_("handleSize",89,44,f9,6a),
	HX_("handleClipRect",dc,b7,41,a6),
	HX_("createTextDisplay",79,ff,6a,e9),
	HX_("createTextInput",81,0d,00,f8),
	HX_("createImageDisplay",43,e1,30,a5),
	HX_("removeImageDisplay",8b,e2,48,f7),
	HX_("handleAddComponent",24,be,c2,5c),
	HX_("handleAddComponentAt",37,c8,89,21),
	HX_("handleRemoveComponent",11,6d,47,da),
	HX_("handleRemoveComponentAt",64,cc,c9,8c),
	HX_("handleSetComponentIndex",8f,73,b6,f4),
	HX_("applyStyle",e3,20,6f,2f),
	HX_("applyUseHandCursor",7e,58,4e,17),
	HX_("set_visible",95,df,8b,33),
	HX_("handleVisibility",9a,57,d4,a2),
	HX_("getComponentOffset",3a,48,da,e9),
	HX_("handleFrameworkProperty",2b,e6,cd,d0),
	HX_("mapEvent",de,37,07,ed),
	HX_("unmapEvent",37,1f,cb,72),
	HX_("__onMouseEvent",d4,e0,95,8c),
	HX_("__onKeyboardEvent",34,d6,76,54),
	HX_("__onTextInputChange",ee,b7,1d,d0),
	HX_("registerBehaviours",d9,a7,67,34),
	HX_("cloneComponent",a0,e9,56,26),
	HX_("self",8c,8b,50,4c),
	::String(null()) };

::hx::Class ComponentImpl_obj::__mClass;

void ComponentImpl_obj::__register()
{
	ComponentImpl_obj _hx_dummy;
	ComponentImpl_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("haxe.ui.backend.ComponentImpl",f1,e7,36,e7);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(ComponentImpl_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< ComponentImpl_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ComponentImpl_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ComponentImpl_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace haxe
} // end namespace ui
} // end namespace backend
